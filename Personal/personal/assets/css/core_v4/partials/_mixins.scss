/*------------------------------------------------------------------------------------------
CORE v4 - Core Mixin Partial
DATE - October 1, 2012
AUTHOR - Doug Fraize & Matthew Holmes
--------------------------------------------------------------------------------------------*/

//=== CSS3 MIXINS ============================================================================

//--- BACKGROUND GRADIENTS -------------------------------------------------------------------
@mixin background-gradient($startColor, $endColor) {
	background-color: mix($startColor, $endColor, 62.5%);
	background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
	background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}

@mixin background-gradient-horizontal($startColor, $endColor) {
	background-color: $endColor;
	background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
	background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
	background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}

@mixin background-gradient-directional($startColor, $endColor, $deg) {
	background-color: $endColor;
	background-repeat: repeat-x;
	background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
	background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
	background-image: linear-gradient($deg, $startColor, $endColor); // Standard, IE10
}

@mixin background-gradient-vertical-three-colors($startColor, $midColor, $colorStop, $endColor) {
	background-color: mix($midColor, $endColor, 80%);
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
	background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
	background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
	background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
	background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
	background-repeat: no-repeat;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin background-gradient-radial($innerColor, $outerColor)  {
	background-color: $outerColor;
	background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
	background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
	background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
	background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
	background-repeat: no-repeat;
}

// Reset filters for IE
@mixin ie-gradient-reset-filter {
	filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
}

//--- ALPHATRANSPARENCY BACKGROUND -----------------------------------------------------------
@mixin translucent-background($color: white, $alpha: 1) {
	background-color: $color; // for IE since it does not understand hsla colors
	background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

//--- ALPHATRANSPARENCY BACKGROUND -----------------------------------------------------------
@mixin translucent-border($color: white, $alpha: 1) {
	border-color: $color; // for IE since it does not understand hsla colors
	border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
	@include background-clip(padding-box);
}

//--- BORDER RADIUS --------------------------------------------------------------------------
@mixin border-radius($radius, $side:all, $side-legacy:topleft) {
	@if $side == all {
		-moz-border-radius:$radius;
		-webkit-border-radius:$radius;
		-o-border-radius:$radius;
		border-radius:$radius;
	}
	@else {
		-moz-border-radius-#{$side-legacy}:$radius;
		-webkit-border-#{$side}-radius:$radius;
		-o-border-#{$side}-radius:$radius;
		border-#{$side}-radius:$radius;
	}
}

//--- BOX SHADOW ------------------------------------------------------------------------------
@mixin box-shadow($h-shadow, $v-shadow, $blur, $color) {
	-moz-box-shadow:$h-shadow $v-shadow $blur $color;
	-webkit-box-shadow:$h-shadow $v-shadow $blur $color;
	-o-box-shadow:$h-shadow $v-shadow $blur $color;
	box-shadow:$h-shadow $v-shadow $blur $color;
}

//--- TEXT SHADOW -----------------------------------------------------------------------------
@mixin text-shadow($h-shadow, $v-shadow, $blur, $color) {
	-moz-text-shadow:$h-shadow $v-shadow $blur $color;
	-webkit-text-shadow:$h-shadow $v-shadow $blur $color;
	-o-text-shadow:$h-shadow $v-shadow $blur $color;
	text-shadow:$h-shadow $v-shadow $blur $color;
}

//--- TRANSITIONS -----------------------------------------------------------------------------
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

//--- TRANSFORMATIONS -------------------------------------------------------------------------
@mixin transform($transform) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-ms-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

@mixin rotate($degrees) {
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	-o-transform: rotate($degrees);
	transform: rotate($degrees);
}

@mixin scale($ratio) {
	-webkit-transform: scale($ratio);
	-moz-transform: scale($ratio);
	-ms-transform: scale($ratio);
	-o-transform: scale($ratio);
	transform: scale($ratio);
}

@mixin translate($x, $y) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	transform: translate($x, $y);
}

@mixin skew($x, $y) {
	-webkit-transform: skew($x, $y);
	-moz-transform: skew($x, $y);
	-ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
	-o-transform: skew($x, $y);
	transform: skew($x, $y);
}

@mixin translate3d($x, $y, $z) {
	-webkit-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);
	-o-transform: translate3d($x, $y, $z);
	transform: translate3d($x, $y, $z);
}

//--- BACKFACE VISIBILITY ---------------------------------------------------------------------
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is 'visible', but can be changed to 'hidden'.
@mixin backface-visibility($visibility){
	-webkit-backface-visibility: $visibility;
  	-moz-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

//--- BACKGROUND CLIPPING ---------------------------------------------------------------------
@mixin background-clip($clip) {
	-webkit-background-clip: $clip;
	-moz-background-clip: $clip;
	background-clip: $clip;
}

//--- BACKFGROUND SIZING ----------------------------------------------------------------------
@mixin background-size($bkgd-size) {
	-webkit-background-size: $bkgd-size;
	-moz-background-size: $bkgd-size;
	-o-background-size: $bkgd-size;
	background-size: $bkgd-size;
}

//--- BOX SIZING ------------------------------------------------------------------------------
@mixin box-sizing($boxmodel) {
	-webkit-box-sizing: $boxmodel;
	-moz-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

//--- USER SELECT -----------------------------------------------------------------------------
// For selecting text on the page, disables the ability to select certain text on the page if 'none' is used.
@mixin user-select($select) {
	-webkit-user-select: $select;
	-moz-user-select: $select;
	-ms-user-select: $select;
	-o-user-select: $select;
	user-select: $select;
}

//--- TYPE SELECTION --------------------------------------------------------------------------
// For selecting text on the page, color and background color
@mixin type-selection($text-color,$bkgd-color) {
	&:-moz-selection {
		color: $text-color;
		background:$bkgd-color;
	}
	&:-webkit-selection {
		color: $text-color;
		background:$bkgd-color;
	}
	&::selection {
		color: $text-color;
		background:$bkgd-color;
	}
}

//--- RESIZE ANYTHING -------------------------------------------------------------------------
@mixin resizable($direction) {
	resize: $direction; // Options: horizontal, vertical, both
	overflow: auto; // Safari fix
}

//--- HYPHENATION -----------------------------------------------------------------------------
@mixin hyphens($mode: auto) {
	word-wrap: break-word;
	-webkit-hyphens: $mode;
	-moz-hyphens: $mode;
	-ms-hyphens: $mode;
	-o-hyphens: $mode;
	hyphens: $mode;
}

//--- OPACITY ---------------------------------------------------------------------------------
@mixin opacity($opacity) {
	opacity: $opacity / 100;
	filter: alpha(opacity=$opacity);
}


//=== UTILITY MIXINS ==========================================================================

//--- CLEARFIX --------------------------------------------------------------------------------
@mixin clearfix {
	&:after {
		content: "\0020";
		display: block;
		height: 0;
		clear: both;
		overflow: hidden;
		visibility: hidden;
	}
}

//--- CENTER ALIGN BLOCK LEVEL ELEMENT -------------------------------------------------------
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//--- PLACEHOLDER TEXT -----------------------------------------------------------------------
@mixin placeholder($color: $placeholderTextColor) {
	&:-moz-placeholder {
		color: $color;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
	&::-webkit-input-placeholder {
		color: $color;
	}
}

//--- TEXT OVERFLOW --------------------------------------------------------------------------
// Requires inline-block or block for proper styling
@mixin text-overflow {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

//--- CSS IMAGE REPLACEMENT ------------------------------------------------------------------
@mixin hide-text {
	font: 0/0 a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}


//--- NAVBAR VERTICAL ALIGN ------------------------------------------------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out '.navbarVerticalAlign(30px);' to calculate the appropriate top margin.
@mixin navbarVerticalAlign($elementHeight) {
	margin-top: ($navbarHeight - $elementHeight) / 2;
}


//=== LINK MIXINS =============================================================================
@mixin href-link($baseLinkColor:#01417E, $baseLinkTextDeco:underline) {
	color:$baseLinkColor;
	text-decoration:$baseLinkTextDeco;
}
@mixin href-link-hover($baseLinkHoverTextDeco:none) {
	text-decoration:$baseLinkHoverTextDeco;
}


//=== GRID SYSTEM =============================================================================
@mixin grid-fluid-span-x($gridColumns, $fluidGridColumnWidth, $fluidGridGutterWidth) {
	@while $gridColumns> 0 {
		.col-#{$gridColumns} { @include grid-fluid-span($gridColumns, $fluidGridColumnWidth, $fluidGridGutterWidth); }
		$gridColumns: $gridColumns - 1;
	}
}

@mixin grid-fluid-span($columns, $fluidGridColumnWidth, $fluidGridGutterWidth) {
	width: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1));
}


@mixin grid-fluid-offset-x($gridColumns, $fluidGridColumnWidth, $fluidGridGutterWidth) {
	@while $gridColumns > 0 {
		.offset-#{$gridColumns} { @include grid-fluid-offset($gridColumns, $fluidGridColumnWidth, $fluidGridGutterWidth); }
		.offset-#{$gridColumns}:first-child { @include grid-fluid-offset-first-child($gridColumns, $fluidGridColumnWidth, $fluidGridGutterWidth); }
		$gridColumns: $gridColumns - 1;
	}
}

@mixin grid-fluid-offset($columns, $fluidGridColumnWidth, $fluidGridGutterWidth) {
	margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) + ($fluidGridGutterWidth * 2);
}

@mixin grid-fluid-offset-first-child($columns, $fluidGridColumnWidth, $fluidGridGutterWidth) {
	margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) + ($fluidGridGutterWidth);
}

// NO MARGIN GRID
@mixin grid-nomargin-span-x($gridColumns, $fluidGridNoMarginColumnWidth, $fluidGridGutterWidth) {
	@while $gridColumns> 0 {
		.col-#{$gridColumns} { @include grid-nomargin-span($gridColumns, $fluidGridNoMarginColumnWidth, $fluidGridGutterWidth); }
		$gridColumns: $gridColumns - 1;
	}
}

@mixin grid-nomargin-span($columns, $fluidGridNoMarginColumnWidth, $fluidGridGutterWidth) {
	width: $fluidGridNoMarginColumnWidth * $columns;
}

// GRID FLUID COLUMN
@mixin grid-fluid-col() {
	[class*="col-"] {
		clear:none;
		float:left;
		margin-left:$fluidGridColumnWidth;
		min-height:$fluidGridColumnWidth;
	}
}

// GRID NO MARGIN COLUMN
@mixin grid-nomargin-col() {
	[class*="col-"] {
		clear:none;
		float:left;
		margin-left:0;
	}
}

//=== RESPONSIVE MIXINS =======================================================================

// RESPONSIVE: 320PX WIDTH RESET
@mixin responsive-320-width-reset() {
	div[class*="col-"],
	article[class*="col-"],
	section[class*="col-"],
	form ol [class*="col-"],
	div[class*="offset-"],
	article[class*="offset-"],
	section[class*="offset-"],
	form ol [class*="offset-"],
	div[class*="offset-"]:first-child,
	article[class*="offset-"]:first-child,
	section[class*="offset-"]:first-child,
	form ol [class*="offset-"]:first-child {
		clear:both;
		float:none;
		width:100%;
		margin-left:0;
		margin-right:0;
	}
	.ui-btn[class*="offset-"],
	.ui-btn[class*="offset-"]:first-child {
		margin-left:0;
	}
	.ui-btn-grp-horz {
		.ui-btn			{
						float:left;
						}
		@include grid-nomargin-span-x($gridColumns, $fluidGridNoMarginColumnWidth, $fluidGridGutterWidth);
		@include grid-nomargin-col;
	}
}